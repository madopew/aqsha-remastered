{"version":3,"sources":["components/AppearTransition/AppearTransition.tsx","components/Balance/Balance.tsx","components/Dialog/Dialog.tsx","components/Numpad/Numpad.tsx","hooks/EventListener.tsx","hooks/LocalStorage.tsx","hooks/KeeperHook.tsx","reducers/DialogReducer.tsx","reducers/NumpadReducer.tsx","components/History/History.tsx","App.tsx","index.tsx"],"names":["TransitionType","AppearTransition","children","visible","effect","CSSTransition","in","timeout","classNames","unmountOnExit","Balance","total","today","onAdd","onWithdraw","useState","opacity","setOpacity","useEffect","className","style","value","decimals","onTouchEnd","DIALOG_OPTIONS_INIT","title","text","firstButtonText","secondButtonText","showCancelButton","onFirst","onSecond","onCancel","Dialog","options","onClick","e","Numpad","onSuccess","setValue","onButtonClick","val","Math","floor","parseInt","toFixed","useEventListener","eventName","handler","element","savedHandler","useRef","targetElement","current","window","addEventListener","eventListener","event","removeEventListener","useLocalStorage","OperationType","key","initialValue","readValue","item","localStorage","getItem","JSON","parse","setItem","stringify","error","console","warn","storedValue","setStoredValue","handleStorageChange","newValue","Function","dispatchEvent","Event","getTodayDate","Date","setHours","useKeeper","historyDepth","updateTodayBalance","last","diffDays","newToday","daily","setToday","setLast","setTotal","setDaily","history","setHistory","undos","setUndos","addOperation","type","amount","push","cp","slice","length","unshift","time","newTotal","update","newDaily","now","getUTCFullYear","getUTCMonth","getDate","getMonthDays","add","withdraw","abs","pop","u","undefined","Error","DialogActionType","NumpadActionType","NumpadOperationType","dialogReducer","prevState","action","openChoose","info","payload","close","openInfo","hide","numpadReducer","open","operation","unknown","onChoose","onError","none","MonthNames","OperationSymbols","History","undo","map","o","t","getMonth","getHours","getMinutes","uuid","App","updateTotal","useReducer","numpadState","numpadDispatch","dialogState","dialogDispatch","bottomToTop","fadeIn","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e99ccae7.chunk.js","sourcesContent":["import { CSSTransition } from \"react-transition-group\";\r\nimport \"./appear-transition.css\";\r\n\r\nexport enum TransitionType {\r\n    bottomToTop,\r\n    fadeIn,\r\n}\r\n\r\ninterface TransitionProps {\r\n    children: JSX.Element;\r\n    visible: boolean;\r\n    effect: TransitionType;\r\n}\r\n\r\nexport default function AppearTransition({\r\n    children,\r\n    visible,\r\n    effect,\r\n}: TransitionProps) {\r\n    return (\r\n        <CSSTransition\r\n            in={visible}\r\n            timeout={200}\r\n            classNames={\"appear-transition-\" + TransitionType[effect]}\r\n            unmountOnExit\r\n        >\r\n            {children}\r\n        </CSSTransition>\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./balance.css\";\r\nimport NumberEasing from \"react-number-easing\";\r\ninterface BalanceProps {\r\n    total: number;\r\n    today: number;\r\n    onAdd: () => void;\r\n    onWithdraw: () => void;\r\n}\r\n\r\nexport default function Balance({\r\n    total,\r\n    today,\r\n    onAdd,\r\n    onWithdraw,\r\n}: BalanceProps) {\r\n    const [opacity, setOpacity] = useState(today < 0 ? 1 : 0);\r\n    useEffect(() => {\r\n        if (today < 0) {\r\n            setOpacity(1);\r\n        } else {\r\n            setOpacity(0);\r\n        }\r\n    }, [today]);\r\n\r\n    return (\r\n        <div className=\"balance-container\">\r\n            <div className=\"balance-positive\"></div>\r\n            <div\r\n                className=\"balance-negative\"\r\n                style={{ opacity: opacity }}\r\n            ></div>\r\n            <div className=\"balance-indicator\">\r\n                <h2>Total Balance</h2>\r\n                <h3>\r\n                    <NumberEasing value={total} decimals={2} /> <span>BYR</span>\r\n                </h3>\r\n            </div>\r\n            <div className=\"balance-indicator\">\r\n                <h2>Today Balance</h2>\r\n                <h3>\r\n                    <NumberEasing value={today} decimals={2} /> <span>BYR</span>\r\n                </h3>\r\n            </div>\r\n            <div className=\"balance-buttons\">\r\n                <button onTouchEnd={() => onAdd()}>\r\n                    <span className=\"material-icons-outlined\">add_circle</span>{\" \"}\r\n                    Add\r\n                </button>\r\n                <div className=\"balance-buttons-separator\"></div>\r\n                <button onTouchEnd={() => onWithdraw()}>\r\n                    <span className=\"material-icons-outlined\">\r\n                        remove_circle\r\n                    </span>{\" \"}\r\n                    Out\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import \"./dialog.css\";\r\n\r\nexport interface DialogOptions {\r\n    title: string;\r\n    text: string | null;\r\n    firstButtonText: string | null;\r\n    secondButtonText: string | null;\r\n    showCancelButton: boolean;\r\n    onFirst: (() => void) | null;\r\n    onSecond: (() => void) | null;\r\n    onCancel: (() => void) | null;\r\n}\r\n\r\nexport const DIALOG_OPTIONS_INIT: DialogOptions = {\r\n    title: \"Title\",\r\n    text: \"Text\",\r\n    firstButtonText: \"First\",\r\n    secondButtonText: \"Second\",\r\n    showCancelButton: true,\r\n    onFirst: null,\r\n    onSecond: null,\r\n    onCancel: null,\r\n};\r\n\r\ninterface DialogProps {\r\n    options: DialogOptions;\r\n}\r\n\r\nexport default function Dialog({\r\n    options: {\r\n        title,\r\n        text,\r\n        firstButtonText,\r\n        secondButtonText,\r\n        showCancelButton,\r\n        onFirst,\r\n        onSecond,\r\n        onCancel,\r\n    },\r\n}: DialogProps) {\r\n    return (\r\n        <div className=\"dialog-outer-container\">\r\n            <div className=\"dialog-container\">\r\n                <h1>{title}</h1>\r\n                {text && <p>{text}</p>}\r\n                <div className=\"dialog-buttons\">\r\n                    {firstButtonText && (\r\n                        <button onClick={(e) => onFirst && onFirst()}>\r\n                            {firstButtonText}\r\n                        </button>\r\n                    )}\r\n                    {secondButtonText && (\r\n                        <button onClick={(e) => onSecond && onSecond()}>\r\n                            {secondButtonText}\r\n                        </button>\r\n                    )}\r\n                    {showCancelButton && (\r\n                        <button onClick={(e) => onCancel && onCancel()}>\r\n                            Cancel\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { useState } from \"react\";\r\nimport \"./numpad.css\";\r\n\r\ninterface NumpadProps {\r\n    onCancel: () => void;\r\n    onSuccess: (value: number) => void;\r\n}\r\n\r\nexport default function Numpad({ onCancel, onSuccess }: NumpadProps) {\r\n    const [value, setValue] = useState(0);\r\n\r\n    const onButtonClick = (val: string) => {\r\n        switch (val) {\r\n            case \"-\":\r\n                if (value === 0) {\r\n                    onCancel();\r\n                } else {\r\n                    setValue(Math.floor(value / 10));\r\n                }\r\n                break;\r\n            case \"+\":\r\n                onSuccess(value / 100);\r\n                break;\r\n            default:\r\n                setValue(value * 10 + parseInt(val));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"numpad-outer-container\">\r\n            <div className=\"numpad-inner-container\">\r\n                <div className=\"numpad-value-container\">\r\n                    <div className=\"numpad-value-container-inner\">\r\n                        {(value / 100).toFixed(2)}\r\n                        <span>BYR</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"numpad-numpad\">\r\n                    <div className=\"numpad-row\">\r\n                        <button onClick={(e) => onButtonClick(\"1\")}>1</button>\r\n                        <button onClick={(e) => onButtonClick(\"2\")}>2</button>\r\n                        <button onClick={(e) => onButtonClick(\"3\")}>3</button>\r\n                    </div>\r\n                    <div className=\"numpad-row\">\r\n                        <button onClick={(e) => onButtonClick(\"4\")}>4</button>\r\n                        <button onClick={(e) => onButtonClick(\"5\")}>5</button>\r\n                        <button onClick={(e) => onButtonClick(\"6\")}>6</button>\r\n                    </div>\r\n                    <div className=\"numpad-row\">\r\n                        <button onClick={(e) => onButtonClick(\"7\")}>7</button>\r\n                        <button onClick={(e) => onButtonClick(\"8\")}>8</button>\r\n                        <button onClick={(e) => onButtonClick(\"9\")}>9</button>\r\n                    </div>\r\n                    <div className=\"numpad-row\">\r\n                        <button onClick={(e) => onButtonClick(\"-\")}>\r\n                            <span className=\"material-icons-outlined\">\r\n                                arrow_back\r\n                            </span>\r\n                        </button>\r\n                        <button onClick={(e) => onButtonClick(\"0\")}>0</button>\r\n                        <button onClick={(e) => onButtonClick(\"+\")}>\r\n                            <span className=\"material-icons-outlined\">\r\n                                done\r\n                            </span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { useRef, useEffect, RefObject } from \"react\";\r\n\r\nfunction useEventListener<T extends HTMLElement = HTMLDivElement>(\r\n    eventName: string,\r\n    handler: (event: Event) => void,\r\n    element?: RefObject<T>\r\n) {\r\n    // Create a ref that stores handler\r\n    const savedHandler = useRef<(event: Event) => void>();\r\n\r\n    useEffect(() => {\r\n        // Define the listening target\r\n        const targetElement: T | Window = element?.current || window;\r\n        if (!(targetElement && targetElement.addEventListener)) {\r\n            return;\r\n        }\r\n\r\n        // Update saved handler if necessary\r\n        if (savedHandler.current !== handler) {\r\n            savedHandler.current = handler;\r\n        }\r\n\r\n        // Create event listener that calls handler function stored in ref\r\n        const eventListener = (event: Event) => {\r\n            // eslint-disable-next-line no-extra-boolean-cast\r\n            if (!!savedHandler?.current) {\r\n                savedHandler.current(event);\r\n            }\r\n        };\r\n\r\n        targetElement.addEventListener(eventName, eventListener);\r\n\r\n        // Remove event listener on cleanup\r\n        return () => {\r\n            targetElement.removeEventListener(eventName, eventListener);\r\n        };\r\n    }, [eventName, element, handler]);\r\n}\r\n\r\nexport default useEventListener;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nfunction useLocalStorage<T>(\r\n    key: string,\r\n    initialValue: T\r\n): [T, (value: T) => void] {\r\n    // Get from local storage then\r\n    // parse stored json or return initialValue\r\n    const readValue = () => {\r\n        // Prevent docs error \"window is undefined\" but keep keep working\r\n        if (typeof window === \"undefined\") {\r\n            return initialValue;\r\n        }\r\n\r\n        try {\r\n            const item = window.localStorage.getItem(key);\r\n            if (item !== null) return JSON.parse(item);\r\n\r\n            window.localStorage.setItem(key, JSON.stringify(initialValue));\r\n            return initialValue;\r\n        } catch (error) {\r\n            console.warn(`Error reading localStorage key “${key}”:`, error);\r\n            return initialValue;\r\n        }\r\n    };\r\n\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState<T>(readValue);\r\n\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = (value: T) => {\r\n        // Prevent docs error \"window is undefined\" but keeps working\r\n        if (typeof window == \"undefined\") {\r\n            console.warn(\r\n                `Tried setting localStorage key “${key}” even though environment is not a client`\r\n            );\r\n        }\r\n\r\n        try {\r\n            // Allow value to be a function so we have the same API as useState\r\n            const newValue =\r\n                value instanceof Function ? value(storedValue) : value;\r\n\r\n            // Save to local storage\r\n            window.localStorage.setItem(key, JSON.stringify(newValue));\r\n\r\n            // Save state\r\n            setStoredValue(newValue);\r\n\r\n            // We dispatch a custom event so every useLocalStorage hook are notified\r\n            window.dispatchEvent(new Event(\"local-storage\"));\r\n        } catch (error) {\r\n            console.warn(`Error setting localStorage key “${key}”:`, error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setStoredValue(readValue());\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const handleStorageChange = () => {\r\n            setStoredValue(readValue());\r\n        };\r\n\r\n        // this only works for other documents, not the current one\r\n        window.addEventListener(\"storage\", handleStorageChange);\r\n\r\n        // this is a custom event, triggered in writeValueToLocalStorage\r\n        window.addEventListener(\"local-storage\", handleStorageChange);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"storage\", handleStorageChange);\r\n            window.removeEventListener(\"local-storage\", handleStorageChange);\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import { useEffect } from \"react\";\r\nimport useEventListener from \"./EventListener\";\r\nimport useLocalStorage from \"./LocalStorage\";\r\n\r\nfunction getTodayDate() {\r\n    let today = new Date().setHours(0, 0, 0, 0);\r\n    return today;\r\n}\r\n\r\nfunction getMonthDays() {\r\n    let now = new Date();\r\n    return new Date(now.getUTCFullYear(), now.getUTCMonth(), 0).getDate();\r\n}\r\n\r\nexport enum OperationType {\r\n    update,\r\n    add,\r\n    withdraw,\r\n}\r\nexport interface KeeperOperation {\r\n    time: Date;\r\n    type: OperationType;\r\n    amount: number;\r\n}\r\n\r\ninterface KeeperState {\r\n    total: number;\r\n    today: number;\r\n    daily: number;\r\n}\r\n\r\ntype KeeperOutput = [\r\n    total: number,\r\n    updateTotal: (amount: number) => void,\r\n    today: number,\r\n    add: (amount: number) => void,\r\n    withdraw: (amount: number) => boolean,\r\n    history: Array<KeeperOperation>,\r\n    undo: () => void\r\n];\r\n\r\nexport default function useKeeper(historyDepth: number): KeeperOutput {\r\n    const EPS = 0.001;\r\n\r\n    const updateTodayBalance = () => {\r\n        if (getTodayDate() > last) {\r\n            let diffDays = (getTodayDate() - last) / (1000 * 60 * 60 * 24);\r\n            let newToday = daily * diffDays + today;\r\n            if (total - newToday > -EPS) {\r\n                setToday(newToday);\r\n            } else {\r\n                setToday(total);\r\n            }\r\n            setLast(getTodayDate());\r\n        }\r\n    };\r\n\r\n    const [total, setTotal] = useLocalStorage(\"total_balance\", 0);\r\n    const [today, setToday] = useLocalStorage(\"today_balance\", 0);\r\n    const [daily, setDaily] = useLocalStorage(\"daily_balance\", 0);\r\n    const [last, setLast] = useLocalStorage(\"last_updated\", getTodayDate());\r\n\r\n    useEffect(() => {\r\n        updateTodayBalance();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEventListener(\"focus\", (e) => {\r\n        updateTodayBalance();\r\n    });\r\n\r\n    const [history, setHistory] = useLocalStorage<Array<KeeperOperation>>(\r\n        \"history\",\r\n        []\r\n    );\r\n\r\n    const [undos, setUndos] = useLocalStorage<Array<KeeperState>>(\"undos\", []);\r\n\r\n    const addOperation = (type: OperationType, amount: number) => {\r\n        undos.push({ total, today, daily });\r\n        setUndos(undos);\r\n\r\n        let cp = history.slice(0);\r\n        if (history.length >= historyDepth) {\r\n            cp = history.slice(history.length - historyDepth + 1);\r\n        }\r\n\r\n        cp.unshift({ time: new Date(), type, amount });\r\n        setHistory(cp);\r\n    };\r\n\r\n    const updateTotalBalance = (newTotal: number) => {\r\n        addOperation(OperationType.update, newTotal);\r\n\r\n        let newDaily = newTotal / getMonthDays();\r\n        setLast(getTodayDate());\r\n        setDaily(newDaily);\r\n        setToday(newDaily);\r\n        setTotal(newTotal);\r\n    };\r\n\r\n    const add = (amount: number) => {\r\n        addOperation(OperationType.add, amount);\r\n\r\n        setTotal(total + amount);\r\n        setToday(today + amount);\r\n    };\r\n\r\n    const withdraw = (amount: number) => {\r\n        if (total - amount > -EPS) {\r\n            addOperation(OperationType.withdraw, amount);\r\n\r\n            setToday(today - amount);\r\n            setTotal(Math.abs(total - amount));\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const undo = () => {\r\n        if (undos.length > 0) {\r\n            history.pop();\r\n            setHistory(history);\r\n            let u = undos.pop();\r\n            if (u === undefined) throw new Error(\"Undo operation is undefined\");\r\n            setUndos(undos);\r\n            setTotal(u.total);\r\n            setToday(u.today);\r\n            setDaily(u.daily);\r\n        }\r\n    };\r\n\r\n    return [total, updateTotalBalance, today, add, withdraw, history, undo];\r\n}\r\n","import { DialogOptions } from \"../components/Dialog/Dialog\";\r\n\r\nexport enum DialogActionType {\r\n    openChoose,\r\n    openInfo,\r\n    hide,\r\n}\r\n\r\ntype DialogInfo = { title: string; text: string | null };\r\n\r\ntype DialogState = { visible: boolean; options: DialogOptions };\r\n\r\ntype DialogAction =\r\n    | {\r\n          type: DialogActionType.openChoose;\r\n          payload: number;\r\n          info: DialogInfo;\r\n          add: (val: number) => void;\r\n          update: (val: number) => void;\r\n          close: () => void;\r\n      }\r\n    | { type: DialogActionType.openInfo; info: DialogInfo; close: () => void }\r\n    | { type: DialogActionType.hide };\r\n\r\nexport default function dialogReducer(\r\n    prevState: DialogState,\r\n    action: DialogAction\r\n): DialogState {\r\n    switch (action.type) {\r\n        case DialogActionType.openChoose:\r\n            return {\r\n                visible: true,\r\n                options: {\r\n                    title: action.info.title,\r\n                    text: action.info.text,\r\n                    firstButtonText: \"Add\",\r\n                    secondButtonText: \"Update\",\r\n                    showCancelButton: true,\r\n                    onFirst: () => {\r\n                        action.add(action.payload);\r\n                        action.close();\r\n                    },\r\n                    onSecond: () => {\r\n                        action.update(action.payload);\r\n                        action.close();\r\n                    },\r\n                    onCancel: () => action.close(),\r\n                },\r\n            };\r\n        case DialogActionType.openInfo:\r\n            return {\r\n                visible: true,\r\n                options: {\r\n                    title: action.info.title,\r\n                    text: action.info.text,\r\n                    firstButtonText: null,\r\n                    secondButtonText: null,\r\n                    showCancelButton: true,\r\n                    onFirst: null,\r\n                    onSecond: null,\r\n                    onCancel: () => action.close(),\r\n                },\r\n            };\r\n        case DialogActionType.hide:\r\n            return { ...prevState, visible: false };\r\n    }\r\n}\r\n","export enum NumpadActionType {\r\n    open,\r\n    close,\r\n    hide,\r\n}\r\n\r\nexport enum NumpadOperationType {\r\n    withdraw,\r\n    unknown,\r\n    none,\r\n}\r\n\r\ntype NumpadState = { visible: boolean; operation: NumpadOperationType };\r\n\r\ntype NumpadAction =\r\n    | { type: NumpadActionType.open; payload: NumpadOperationType }\r\n    | {\r\n          type: NumpadActionType.close;\r\n          payload: number;\r\n          withdraw: (val: number) => boolean;\r\n          onChoose: (val: number) => void;\r\n          onError: () => void;\r\n      }\r\n    | { type: NumpadActionType.hide };\r\n\r\nexport default function numpadReducer(\r\n    prevState: NumpadState,\r\n    action: NumpadAction\r\n): NumpadState {\r\n    switch (action.type) {\r\n        case NumpadActionType.open:\r\n            return { visible: true, operation: action.payload };\r\n        case NumpadActionType.close:\r\n            switch (prevState.operation) {\r\n                case NumpadOperationType.unknown:\r\n                    action.onChoose(action.payload);\r\n                    break;\r\n                case NumpadOperationType.withdraw:\r\n                    let res = action.withdraw(action.payload);\r\n                    if (!res) action.onError();\r\n                    break;\r\n                default:\r\n                    throw Error(\r\n                        \"Invalid numpad close \" +\r\n                            NumpadOperationType[prevState.operation]\r\n                    );\r\n            }\r\n            return { visible: false, operation: NumpadOperationType.none };\r\n        case NumpadActionType.hide:\r\n            return { visible: false, operation: NumpadOperationType.none };\r\n    }\r\n}\r\n","import uuid from \"react-uuid\";\r\nimport { KeeperOperation, OperationType } from \"../../hooks/KeeperHook\";\r\nimport \"./history.css\";\r\n\r\ninterface HistoryProps {\r\n    history: KeeperOperation[];\r\n    undo: () => void;\r\n}\r\n\r\nconst MonthNames = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n];\r\n\r\nconst OperationSymbols = [\"\", \"+\", \"-\"];\r\n\r\nexport default function History({ history, undo }: HistoryProps) {\r\n    return (\r\n        <div className=\"history-container\">\r\n            {history.map((o) => {\r\n                let t = new Date(o.time);\r\n                return (\r\n                    <div key={uuid()} className=\"history-operation\">\r\n                        <span className=\"operation-time\">\r\n                            {t.getDate()} {MonthNames[t.getMonth()]},{\" \"}\r\n                            {t.getHours()}:{t.getMinutes()}\r\n                        </span>\r\n                        <span\r\n                            className={\r\n                                \"operation-amount operation-\" +\r\n                                OperationType[o.type]\r\n                            }\r\n                        >\r\n                            {OperationSymbols[o.type]}\r\n                            {o.amount.toFixed(2)}\r\n                        </span>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n","import { useReducer } from \"react\";\r\nimport \"./App.css\";\r\nimport AppearTransition, {\r\n    TransitionType,\r\n} from \"./components/AppearTransition/AppearTransition\";\r\nimport Balance from \"./components/Balance/Balance\";\r\nimport Dialog, { DIALOG_OPTIONS_INIT } from \"./components/Dialog/Dialog\";\r\nimport Numpad from \"./components/Numpad/Numpad\";\r\nimport useKeeper from \"./hooks/KeeperHook\";\r\nimport dialogReducer, { DialogActionType } from \"./reducers/DialogReducer\";\r\nimport numpadReducer, {\r\n    NumpadActionType,\r\n    NumpadOperationType,\r\n} from \"./reducers/NumpadReducer\";\r\nimport History from \"./components/History/History\";\r\n\r\nfunction App() {\r\n    const MAX_HISTORY = 10;\r\n    const [total, updateTotal, today, add, withdraw, history, undo] =\r\n        useKeeper(MAX_HISTORY);\r\n\r\n    const [numpadState, numpadDispatch] = useReducer(numpadReducer, {\r\n        visible: false,\r\n        operation: NumpadOperationType.none,\r\n    });\r\n\r\n    const [dialogState, dialogDispatch] = useReducer(dialogReducer, {\r\n        visible: false,\r\n        options: DIALOG_OPTIONS_INIT,\r\n    });\r\n\r\n    const onAdd = () => {\r\n        numpadDispatch({\r\n            type: NumpadActionType.open,\r\n            payload: NumpadOperationType.unknown,\r\n        });\r\n    };\r\n\r\n    const onWithdraw = () => {\r\n        numpadDispatch({\r\n            type: NumpadActionType.open,\r\n            payload: NumpadOperationType.withdraw,\r\n        });\r\n    };\r\n\r\n    const onNumpadSuccess = (val: number) => {\r\n        numpadDispatch({\r\n            type: NumpadActionType.close,\r\n            payload: val,\r\n            withdraw,\r\n            onChoose: (val) =>\r\n                dialogDispatch({\r\n                    type: DialogActionType.openChoose,\r\n                    payload: val,\r\n                    info: {\r\n                        title: \"Balance added.\",\r\n                        text: \"Do you want to add extra income or update monthy budget?\",\r\n                    },\r\n                    add: add,\r\n                    update: updateTotal,\r\n                    close: () =>\r\n                        dialogDispatch({ type: DialogActionType.hide }),\r\n                }),\r\n            onError: () =>\r\n                dialogDispatch({\r\n                    type: DialogActionType.openInfo,\r\n                    info: {\r\n                        title: \"You don't have enough balance.\",\r\n                        text: null,\r\n                    },\r\n                    close: () =>\r\n                        dialogDispatch({ type: DialogActionType.hide }),\r\n                }),\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"root-main\">\r\n            <div className=\"root-top\">\r\n                <AppearTransition\r\n                    visible={numpadState.visible}\r\n                    effect={TransitionType.bottomToTop}\r\n                >\r\n                    <Numpad\r\n                        onSuccess={onNumpadSuccess}\r\n                        onCancel={() =>\r\n                            numpadDispatch({ type: NumpadActionType.hide })\r\n                        }\r\n                    />\r\n                </AppearTransition>\r\n            </div>\r\n            <div className=\"root-top\">\r\n                <AppearTransition\r\n                    visible={dialogState.visible}\r\n                    effect={TransitionType.fadeIn}\r\n                >\r\n                    <Dialog options={dialogState.options} />\r\n                </AppearTransition>\r\n            </div>\r\n            <div className=\"root-balance\">\r\n                <Balance\r\n                    total={total}\r\n                    today={today}\r\n                    onAdd={onAdd}\r\n                    onWithdraw={onWithdraw}\r\n                />\r\n            </div>\r\n            <div className=\"root-history\">\r\n                <History history={history} undo={undo} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./reset.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}